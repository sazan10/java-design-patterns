name: Run JPF

on:
  push:

jobs:
  run-jpf:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        java: [ '11' ]
    name: Java ${{ matrix.java }} Run JPF

    steps:
    - name: Checkout Code
      uses: actions/checkout@v4

    - name: Set up JDK ${{ matrix.java }}
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: ${{ matrix.java }}
    - name: Clone jpf-core
      run: |
        git clone https://github.com/javapathfinder/jpf-core.git /tmp/jpf-core
        cd /tmp/jpf-core
        ./gradlew buildJars
    # - name: Install dependencies
    #   run: mvn install
    - name: Compile Java sources
      run: |
        mkdir -p ./build
        find ./ -name "*.java" | xargs javac -d ./build -cp /tmp/jpf-core/build/jpf-classes.jar --enable-preview --release ${{ matrix.java }}

    - name: Generate and Run JPF Configs
      run: |
        find ./ -name "*.java" | while read -r file; do
          # Extract package name from the Java file
          package=$(grep "^package " "$file" | awk '{print $2}' | sed 's/;$//')
          classname=$(basename "$file" .java)
          
          if [ -n "$package" ]; then
            fqcn="$package.$classname"
          else
            fqcn="$classname"
          fi

          dir=$(dirname "$file")
          
          # Create .jpf file
          echo "target=$fqcn" > $dir/$classname.jpf
          echo "classpath=./build" >> $dir/$classname.jpf
          echo "sourcepath=./" >> $dir/$classname.jpf
          echo "vm.por=true" >> $dir/$classname.jpf
          echo "vm.version=${{ matrix.java }}" >> $dir/$classname.jpf
          echo "jvm.insn_factory.class=gov.nasa.jpf.jvm.bytecode.InstructionFactory" >> $dir/$classname.jpf
          echo "jpf.basedir=/tmp/jpf-core" >> $dir/$classname.jpf
          echo "Generated JPF config for $fqcn"

          java -jar /tmp/jpf-core/build/RunJPF.jar $dir/$classname.jpf --enable-preview
        done
